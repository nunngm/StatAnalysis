library(devtools)
library(roxygen2)
library(GARP)
library(GARP)
load_all()
library(GARP)
library(GARP)
x = multcompLetters(res)
library(GARP)
library(GARP)
help(GARP)
??GARP
library(GARP)
library(GARP)
library(GARP)
library(GARP)
library(GARP)
mydata= read.table(file= "clipboard",sep= "\t",header =F,stringsAsFactors = F) #read from clipboard
View(mydata)
db=mydata
##This uses a different input format than above
#Makes the assumption that each treatment type has at least 2 replicates
age=t(db[1,2:ncol(db)])
View(age)
View(db)
rownames(db)=db[,1]
View(db)
db = t(db[2:nrow(db),2:ncol(db)])
View(db)
mydata= read.table(file= "clipboard",sep= "\t",header =F,stringsAsFactors = F) #read from clipboard
##This uses a different input format than above
#Makes the assumption that each treatment type has at least 2 replicates
#rowVar= row based stuff
#colVar = column based variable
colVar=t(db[1,2:ncol(db)]) #takes top row of database as a copy of which samples are var2- and which are mature
rownames(db)=db[,1]
mydata= read.table(file= "clipboard",sep= "\t",header =F,stringsAsFactors = F) #read from clipboard
##This uses a different input format than above
#Makes the assumption that each treatment type has at least 2 replicates
#rowVar= row based stuff
#colVar = column based variable
colVar=t(db[1,2:ncol(db)]) #takes top row of database as a copy of which samples are var2- and which are mature
rownames(db)=db[,1]
db = t(db[2:nrow(db),2:ncol(db)])
View(db)
mydata= read.table(file= "clipboard",sep= "\t",header =F,stringsAsFactors = F) #read from clipboard
##This uses a different input format than above
#Makes the assumption that each treatment type has at least 2 replicates
#rowVar= row based stuff
#colVar = column based variable
colVar=t(db[1,2:ncol(db)]) #takes top row of database as a copy of which samples are var2- and which are mature
rownames(db)=db[,1]
View(mydata)
mydata= read.table(file= "clipboard",sep= "\t",header =F,stringsAsFactors = F) #read from clipboard
##This uses a different input format than above
#Makes the assumption that each treatment type has at least 2 replicates
#rowVar= row based stuff
#colVar = column based variable
colVar=t(db[1,2:ncol(db)]) #takes top row of database as a copy of which samples are var2- and which are mature
rownames(db)=db[,1]
##This uses a different input format than above
#Makes the assumption that each treatment type has at least 2 replicates
#rowVar= row based stuff
#colVar = column based variable
colVar=t(db[1,2:ncol(db)]) #takes top row of database as a copy of which samples are var2- and which are mature
View(db)
mydata= read.table(file= "clipboard",sep= "\t",header =F,stringsAsFactors = F) #read from clipboard
db=mydata
##This uses a different input format than above
#Makes the assumption that each treatment type has at least 2 replicates
#rowVar= row based stuff
#colVar = column based variable
colVar=t(db[1,2:ncol(db)]) #takes top row of database as a copy of which samples are var2- and which are mature
rownames(db)=db[,1]
db = t(db[2:nrow(db),2:ncol(db)])
db <- as.data.frame(apply(db,FUN= as.numeric,MARGIN=c(1,2)))
View(db)
mydp= NULL
orgData= data.frame()
mean_cfu=NULL
mydp.colVar = NULL
mydp= NULL
orgData= data.frame()
mean_cfu=NULL
mydp.colVar = NULL
View(db)
for (i in 1:ncol(db)){
mean_cfu = rbind(mean_cfu,mean(db[1:3,i],na.rm=T))
mean_cfu = rbind(mean_cfu,mean(db[4:6,i],na.rm=T))
mydp = rbind(mydp,sd(db[1:3,i],na.rm=T))
mydp = rbind(mydp,sd(db[4:6,i],na.rm =T))
mydp.colVar =rbind(mydp.colVar,colVar[1])
mydp.colVar = rbind(mydp.colVar,colVar[4])
}
View(mydp)
mydp = cbind(rep(colnames(db[,1:ncol(db)]),each =2),mean_cfu,mydp,mydp.colVar)
colnames(mydp) = c("type","cfu","stdev","colVar")
orgData.names = as.data.frame(rep(colnames(db),each = 6))
orgData.colVar = as.data.frame(rep(colVar, times = ncol(db)))
orgData = unlist(db)
names(orgData)= rep_len(NA, length(orgData))
orgData = cbind(orgData.names,orgData,orgData.colVar)
colnames(orgData) = c("type","cfu","colVar")
View(orgData)
View(mydp)
rm(orgData.names,colVar,orgData.colVar,mydp.colVar,i,mean_cfu)
